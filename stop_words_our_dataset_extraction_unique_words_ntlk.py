# -*- coding: utf-8 -*-
"""Stop Words - Our Dataset - Extraction - Unique words - NTLK.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q-b1azB8TNkMgc-K2FWju2R4FYY7Dhtv
"""

base = [('eu sou admirada por muitos','alegria'),
        ('me sinto completamente amado','alegria'),
        ('amar e maravilhoso','alegria'),
        ('estou me sentindo muito animado novamente','alegria'),
        ('eu estou muito bem hoje','alegria'),
        ('que belo dia para dirigir um carro novo','alegria'),
        ('o dia est√° muito bonito','alegria'),
        ('estou contente com o resultado do teste que fiz no dia de ontem','alegria'),
        ('o amor e lindo','alegria'),
        ('nossa amizade e amor vai durar para sempre', 'alegria'),
        ('estou amedrontado', 'medo'),
        ('ele esta me ameacando a dias', 'medo'),
        ('isso me deixa apavorada', 'medo'),
        ('este lugar e apavorante', 'medo'),
        ('se perdermos outro jogo seremos eliminados e isso me deixa com pavor', 'medo'),
        ('tome cuidado com o lobisomem', 'medo'),
        ('se eles descobrirem estamos encrencados', 'medo'),
        ('estou tremendo de medo', 'medo'),
        ('eu tenho muito medo dele', 'medo'),
        ('estou com medo do resultado dos meus testes', 'medo')]

stopwords = ['a', 'agora', 'algum', 'alguma', 'aquele', 'aqueles', 'de', 'deu', 'do', 'e', 'estou', 'esta', 'esta',
             'ir', 'meu', 'muito', 'mesmo', 'no', 'nossa', 'o', 'outro', 'para', 'que', 'sem', 'talvez', 'tem', 'tendo',
             'tenha', 'teve', 'tive', 'todo', 'um', 'uma', 'umas', 'uns', 'vou']

def removerstopword(text):
  sentences = []
  for(words, emotion) in text:
    wstop = [p for p in words.split() if p not in stopwords]
    sentences.append((wstop, emotion))
  return sentences

print(removerstopword(tbase))

stopwordsnltk = nltk.corpus.stopwords.words{'portuguese'}
def removerstopword(text):
  sentences = []
  for(words, emotion) in text:
    wstop = [p for p in words.split() if p not in stopwordsnltk]
    sentences.append((wstop, emotion))
  return sentences
print(stopwordsnltk)

def applystemmer:
  stemmer = nltk.stem.RSLPStemmer
  setencesstemming =  []
  for(sentence, emotion) in text:
    withstemming = [str(stemmer.stem(p)) for in sentence.split() if p not in stopwordsnltk]
    setencesstemming.append((withstemming,emotion))
  return setencesstemming

setenceswithstemming = applystemmer(base)
print(setenceswithstemming)

def searchwords(sentences):
  allsenteces = []
  for (sentences, emotion) in sentences:
    allsenteces.extend(sentences)
  return allsenteces

sentences = searchwords(setenceswithstemming)

def searchfrequency(sentences):
  sentences = nltk.FreDist(sentences)
  return sentences

freq = searchfrequency(sentences)
print(freq.most_common(50))

def uniquewordsearch(freq):
  freq = freq.keys()
  return freq

uniqueword = uniquewordsearch(freq)
print(uniqueword)